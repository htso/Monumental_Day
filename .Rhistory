# :::: VIZ ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
png("NDX_jun2020.png", width=640, height=480)
chartSeries(x[,1:4], subset="2020"); title(main="Coronavirus Crash and Recovery", col.main="white", font.main=4, cex.main=1.5)
dev.off()
ix = which(index(x) == as.Date("2001-09-21"))
x1 = x[(ix-dt1-40):(ix+dt2+1),1:4]
png("NDX_sep2001.png", width=640, height=480)
chartSeries(x1); title(main="Internet Bubble Sep 2001", col.main="white", font.main=4, cex.main=1.5)
dev.off()
# :::: VIZ ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
png("NDX_jun2020.png", width=640, height=480)
chartSeries(x[,1:4], subset="2020"); title(main="Coronavirus Crash -- June 2020", col.main="white", font.main=4, cex.main=1.5)
dev.off()
ix = which(index(x) == as.Date("2001-09-21"))
x1 = x[(ix-dt1-40):(ix+dt2+1),1:4]
png("NDX_sep2001.png", width=640, height=480)
chartSeries(x1); title(main="Internet Bubble -- Sep 2001", col.main="white", font.main=4, cex.main=1.5)
dev.off()
x2 = NDX[(ix-dt1-40):(ix+200),1:4]
png("NDX_sep2001_yr_later.png", width=640, height=480)
chartSeries(x2); title(main="... A year later", col.main="white", font.main=4, cex.main=1.5)
dev.off()
getFin("AAPL")
?Defunct
getFinancials("AAPL")
dim(NDX)
dim(x)
tail(x)
# To show that, roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=dt2, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
head(forw)
backw = as.data.frame(rollapply(zoo(x[,6]), width=dt1, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
head(backw)
df = na.omit(merge(forw, backw, by="date", all=TRUE))
head(df)
tail(df)
tail(backw)
tail(forw)
df1 = df[which(df[,"Backw"] < -0.2),]
dim(df1)
head(df1)
head(df1, 20)
0.1/0.9
sapply(df1[,"Backw"], FUN=recov)
recov = function(d) {-d/(d+1)}
sapply(df1[,"Backw"], FUN=recov)
df1[,"Backw"]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
head(df1)
which(df1[,"r"] > df1[,"Forw"])
which(df1[,"Forw"] > df1[,"r"])
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
forw = as.data.frame(rollapply(zoo(x[,6]), width=dt2, look_inside, by=1, align="left"))
head(forw)
?strsplit
strsplit(colnames(NDX), ".")
strsplit(colnames(NDX), "\\.")
strsplit(colnames(NDX), "\\.")[[1]]
strsplit(colnames(NDX), "\\.")[[1]][[1]]
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
head(GSPC)
sum(is.na(GSPC[,6]))
X11();chartSeries(GSPC)
X11();chartSeries(GSPC["1928::1935"])
X11();chartSeries(GSPC["1928::1935", 1:4])
X11();chartSeries(GSPC["1928::1939", 1:4])
X11();chartSeries(GSPC["1928::1942", 1:4])
X11();chartSeries(GSPC["1928::1942", 6])
x = GSPC
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
forw = as.data.frame(rollapply(zoo(x[,6]), width=dt2, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=dt1, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
x = RUT
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
forw = as.data.frame(rollapply(zoo(x[,6]), width=dt2, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=dt1, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
x = FTSE
sum(is.na(x[,6]))
rl = rle(as.integer(is.na(x[,6])))
# compute max gap length :
maxgap = max(rl$lengths[which(rl$values==1)])
maxgap
length(which(is.na(x[,6]))) > 0
x = FTSE
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
head(x)
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
sum(is.na(xx))
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
x[,6] = x1
sum(is.na(x[,6]))
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
X11();chartSeries(x1[,1:4])
dt1 = 23
dt2=53
head(x)
tail(x)
forw = as.data.frame(rollapply(zoo(x[,6]), width=dt2, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=dt1, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
x = GDAXI
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
}
x[,6] = x1
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
X11();chartSeries(x1)
forw = as.data.frame(rollapply(zoo(x[,6]), width=dt2, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=dt1, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
tkr
x = FCHI
x = GDAXI
x = GDAXI
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
}
x[,6] = x1
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
# Roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=53, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=23, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
x = FCHI
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
}
x[,6] = x1
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
# Roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=53, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=23, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
x = N225
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
}
x[,6] = x1
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
# Roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=53, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=23, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
x = HSI
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
}
x[,6] = x1
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
# Roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=53, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=23, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
X11();chartSeries(HSI["1997-06::1998-06", 6])
x = NDX
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
}
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
23+53
x = STI
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
tkr
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
x[,6] = x1
}
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
# Roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=53, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=23, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
tkr
X11();chartSeries(x["1997-06::1998-06",6])
x = AORD
tkr = strsplit(colnames(x), "\\.")[[1]][[1]]
# ----- deal with gaps in the series -----------------------------------
xx = x[,6]
if ( sum(is.na(xx)) > 0 ) {
rl = rle(as.integer(is.na(xx)))
maxgap = max(rl$lengths[which(rl$values==1)])
cat("maxgap : ", maxgap, "\n")
cat("# NA segments : ", length(which(is.na(xx))), "\n")
x1 = na.spline(xx, maxgap=20, na.rm=TRUE)
cat("aft NA impute, :", length(which(is.na(x1))), "\n\n")
x[,6] = x1
}
x1 = x["2020"]
t1 = which.max(x1["::2020-06-04",6])
t2 = which.min(x1[,6])
t3 = nrow(x1)
# How long did it take to go from record high in Feb to the low in March ?
(dt1 = t2 - t1 + 1) # 23
# How long did it take to recover from March low?
(dt2 = t3 - t2 ) # 53
# Roll a window of 53 trading days over the history of index.
look_inside = function(xx) { tail(xx,1)/xx[1]-1 }
forw = as.data.frame(rollapply(zoo(x[,6]), width=53, look_inside, by=1, align="left"))
forw[,"date"] = as.Date(row.names(forw))
colnames(forw)[1] = "Forw"
backw = as.data.frame(rollapply(zoo(x[,6]), width=23, look_inside, by=1, align="right"))
backw[,"date"] = as.Date(row.names(backw))
colnames(backw)[1] = "Backw"
df = na.omit(merge(forw, backw, by="date", all=TRUE))
df1 = df[which(df[,"Backw"] < -0.2),]
recov = function(d) {-d/(d+1)}
df1[,"r"] = sapply(df1[,"Backw"], recov)
ix = which(df1[,"Forw"] > df1[,"r"])
df1[ix,]
X11();chartSeries(x1[,6])
home = "/mnt/WanChai/Dropbox/GITHUB_REPO/Monumental_Day"
setwd(home)
source(paste(home, "/utils/fun.R", sep=""))
?getSymbols
env()
get.env()
environment()
globalenv()
parent.env()
ls()
exists("AORD")
ff = "YF_stock_indices.RData"
home = "/mnt/WanChai/Dropbox/GITHUB_REPO/Monumental_Day"
setwd(home)
ff = "YF_stock_indices.RData"
stock_mkt_indices = c("GSPC", "NDX", "RUT", "FTSE", "GDAXI", "FCHI", "N225", "HSI", "STI",
"AORD", "JKSE", "KS11", "TWII", "BVSP", "MXX")
file.exists(ff)
ls()
library(goodies)
library(quantmod)
home = "/mnt/WanChai/Dropbox/GITHUB_REPO/Monumental_Day"
setwd(home)
ff = "YF_stock_indices.RData"
stock_mkt_indices = c("GSPC", "NDX", "RUT", "FTSE", "GDAXI", "FCHI", "N225", "HSI", "STI",
"AORD", "JKSE", "KS11", "TWII", "BVSP", "MXX")
if (file.exists(ff)) {
load(ff)
} else {
getYF(stock_mkt_indices)
save.image("YF_stock_indices.RData")
}
ls()
source(paste(home, "/utils/fun.R", sep=""))
ls()
library(goodies)
library(quantmod)
home = "/mnt/WanChai/Dropbox/GITHUB_REPO/Monumental_Day"
setwd(home)
ff = "YF_stock_indices.RData"
stock_mkt_indices = c("GSPC", "NDX", "RUT", "FTSE", "GDAXI", "FCHI", "N225", "HSI", "STI",
"AORD", "JKSE", "KS11", "TWII", "BVSP", "MXX")
source(paste(home, "/utils/fun.R", sep=""))
ls()
ff = "YF_stock_indices.RData"
stock_mkt_indices = c("GSPC", "NDX", "RUT", "FTSE", "GDAXI", "FCHI", "N225", "HSI", "STI",
"AORD", "JKSE", "KS11", "TWII", "BVSP", "MXX")
if (file.exists(ff)) {
load(ff)
} else {
getYF(stock_mkt_indices)
save.image("YF_stock_indices.RData")
}
ls()
globalenv()
parent.frame()
#' Get historic stock market data from Yahoo Finance
#'
#' @param tkr vector of character strings
#' @description Call quantmod function to save xts in the global environment
#' @return None
#' @export
getYF = function(tkr) { for (s in tkr) getSymbols(paste("^", s, sep=""), env=globalenv(), src="yahoo", from="1800-01-01") }
getYF(stock_mkt_indices)
ls()
dim(GSPC)
head(GSPC)
tail(GSPC)
